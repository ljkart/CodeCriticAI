[project]
name = "code-reviewer-backend"
version = "0.1.0"
description = "Backend for the code review application"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.15.2",
    "dotenv>=0.9.9",
    "flask>=3.1.0",
    "flask-cors>=5.0.1",
    "flask-jwt-extended>=4.7.1",
    "flask-sqlalchemy>=3.1.1",
    "gunicorn>=23.0.0",
    "langchain>=0.3.21",
    "langchain-openai>=0.3.11",
    "openai>=1.66.3",
    "pydantic",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.build]
include = [
    "app/**/*.py",
    "app/**/*.html",
    "app/**/*.css",
    "app/**/*.js",
]
exclude = [
    "app/tests/*",
    "**/__pycache__",
    "**/*.pyc",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=app --cov-report=term-missing"
testpaths = ["app/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
branch = true
source = ["app"]
omit = [
    "app/tests/*",
    "app/*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true
